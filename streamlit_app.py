# -*- coding: utf-8 -*-
"""app.py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rYQPstDCDWnEAK6IG8Cna0-k4z279P80
"""

import streamlit as st
import whisper
import yt_dlp
import os

def download_audio(url, output_path="temp_audio.mp3"):
    ydl_opts = {
        'format': 'bestaudio/best',
        'outtmpl': output_path,
        'quiet': True,
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])

def transcribe_audio(audio_path):
    model = whisper.load_model("base")
    result = model.transcribe(audio_path, language="en")
    return result["text"]

def classify_accent(text):
    t = text.lower()
    if any(w in t for w in ["mate", "aussie", "bloody", "no worries"]):
        return "Australian", 90.0, "Common Australian slang detected."
    elif any(w in t for w in ["innit", "cheers", "trousers"]):
        return "British", 88.0, "British English vocabulary found."
    elif any(w in t for w in ["dude", "awesome", "gotta", "wanna"]):
        return "American", 85.0, "American English expressions detected."
    elif any(w in t for w in ["only yaar", "i am telling", "good name"]):
        return "Indian English", 80.0, "Indian English phrasing observed."
    else:
        return "General English", 70.0, "No strong regional markers found."

st.title("üéôÔ∏è YouTube Accent Analyzer")

video_url = st.text_input("Enter a public YouTube video URL:")

if st.button("Analyze"):
    if video_url:
        st.write("üì• Downloading audio...")
        try:
            download_audio(video_url)
            st.success("‚úÖ Audio downloaded successfully.")

            st.write("üß† Transcribing with Whisper...")
            text = transcribe_audio("temp_audio.mp3")

            st.write("üîé Classifying accent...")
            accent, confidence, note = classify_accent(text)

            st.subheader("üìä Accent Analysis Report")
            st.write(f"**Accent:** {accent}")
            st.write(f"**Confidence:** {confidence}%")
            st.write(f"**Note:** {note}")

            os.remove("temp_audio.mp3")
        except Exception as e:
            st.error(f"Error: {e}")
    else:
        st.warning("Please enter a valid YouTube URL.")

